name: Build and Publish DirectorySize

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'The Release tag for this run'
        required: true
        default: '3.11.0'

jobs:
  create_tag:
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: './csharp12'
        
    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.event.inputs.tag }}
        release_name: Release ${{ github.event.inputs.tag }}
        draft: false
        prerelease: false
    
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      
  build_and_publish_linux:
    needs: create_tag
      
    defaults:
      run:
        working-directory: './csharp12'
      
    strategy:
      matrix:
        runtime: [linux-x64]
        os: [ubuntu-latest]

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 8.0.x
        
    - name: Build and Publish ${{ matrix.runtime }} runtime
      run: dotnet publish -c Release -r ${{ matrix.runtime }} --nologo -o publish
  
    - name: Compress binary
      run: |
        tar czvf directorysize-${{ matrix.runtime }}.tar.gz publish/DirectorySize*
    
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create_tag.outputs.upload_url }}
        asset_path: ./csharp12/directorysize-${{ matrix.runtime }}.tar.gz
        asset_name: directorysize-${{ matrix.runtime }}.tar.gz
        asset_content_type: application/tar

  build_and_publish_windows:
    needs: create_tag
      
    defaults:
      run:
        working-directory: './csharp12'
      
    strategy:
      matrix:
        runtime: [win-x64]
        os: [windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 8.0.x
        
    - name: Build and Publish ${{ matrix.runtime }} runtime
      run: dotnet publish -c Release -r ${{ matrix.runtime }} --nologo -o publish
  
    - name: Compress binary
      run: |
        tar czvf directorysize-${{ matrix.runtime }}.tar.gz publish/DirectorySize*
    
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create_tag.outputs.upload_url }}
        asset_path: ./csharp12/directorysize-${{ matrix.runtime }}.tar.gz
        asset_name: directorysize-${{ matrix.runtime }}.tar.gz
        asset_content_type: application/tar